apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "app.learn.made"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        File secretsExists = new File("secret.properties")
        if (secretsExists.exists()) {
            def secretsFile = rootProject.file('secret.properties')
            def secrets = new Properties()
            secrets.load(new FileInputStream(secretsFile))
            buildConfigField "String", "API_KEY", "\"${secrets.getProperty('API_KEY')}\""
            buildConfigField "String", "BASE_URL", "\"${secrets.getProperty('BASE_URL')}\""
            buildConfigField "String", "API_POSTER_PATH", "\"${secrets.getProperty('API_POSTER_PATH')}\""
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Anko
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk27:$anko_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"


    // Dependency Injection
    implementation "org.koin:koin-android:$koin_version"

    // Retrofit + Gson
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"

    // jackson
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.5"

    // RxJava & RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // UI
    implementation "com.android.support:cardview-v7:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "com.android.support:support-vector-drawable:$support_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v4:$support_version"
    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation 'me.grantland:autofittextview:0.2.1'
    implementation 'com.synnapps:carouselview:0.1.5'

    // Object mapper
    implementation "org.modelmapper:modelmapper:2.3.0"
}

androidExtensions {
    experimental = true
}
